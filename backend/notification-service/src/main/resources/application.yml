server:
  port: 8085

spring:
  application:
    name: notification-service
  
  # Nacos 配置
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        namespace: dev
        group: DEFAULT_GROUP
      config:
        server-addr: localhost:8848
        namespace: dev
        group: DEFAULT_GROUP
        file-extension: yml
        shared-configs:
          - data-id: common-config.yml
            group: DEFAULT_GROUP
            refresh: true

  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/drone_delivery_notification?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: 123456
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,slf4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  # Redis 配置
  redis:
    host: localhost
    port: 6379
    password: 
    database: 3
    timeout: 5000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # RabbitMQ 配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 15000
    publisher-confirms: true
    publisher-returns: true
    listener:
      simple:
        acknowledge-mode: manual
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000

  # 邮件配置
  mail:
    host: smtp.qq.com
    port: 587
    username: your-email@qq.com
    password: your-email-password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

# MyBatis Plus 配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
  global-config:
    db-config:
      id-type: ASSIGN_ID
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/**/*Mapper.xml

# 日志配置
logging:
  level:
    com.drone.delivery.notification: DEBUG
    org.springframework.amqp: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'

# 通知配置
notification:
  # 默认最大重试次数
  default-max-retry: 3
  # 重试间隔（分钟）
  retry-interval: 5
  # 过期通知清理天数
  expire-days: 30
  # 批量处理大小
  batch-size: 100
  
  # 短信配置
  sms:
    provider: aliyun
    access-key: your-access-key
    access-secret: your-access-secret
    sign-name: 无人机配送
    template-code: SMS_123456789
  
  # 推送配置
  push:
    provider: jpush
    app-key: your-app-key
    master-secret: your-master-secret
  
  # 微信配置
  wechat:
    app-id: your-app-id
    app-secret: your-app-secret
    template-id: your-template-id
  
  # 语音配置
  voice:
    provider: aliyun
    access-key: your-access-key
    access-secret: your-access-secret
    called-show-number: 400-123-4567

# 消息队列配置
rabbitmq:
  queues:
    notification-send: notification.send
    notification-retry: notification.retry
    notification-dlq: notification.dlq
  exchanges:
    notification: notification.exchange
  routing-keys:
    send: notification.send
    retry: notification.retry